{"version":3,"sources":["components/fiveDaysWeather/fiveDaysWeather.jsx","components/todayWeather/todayWeather.jsx","components/citySelector/citySelector.jsx","components/errorMessage/errorMessage.jsx","services/weather.js","components/home/home.jsx","common/const.js","index.js"],"names":["FiveDaysWeather","props","forecast","scroll","Object","keys","length","Grid","container","className","alignItems","sort","a","b","moment","valueOf","map","x","item","xs","key","format","day","weather","id","main","temp_max","night","temp_min","humidity","TodayWeather","style","animation","animations","bounceIn","name","sys","country","temp","useStyles","makeStyles","theme","root","padding","display","justifyContent","position","zIndex","input","marginLeft","spacing","flex","iconButton","divider","height","margin","CitySelector","classes","useState","city","setCity","CardContent","Paper","component","onSubmit","event","preventDefault","InputBase","placeholder","onChange","e","target","value","IconButton","type","aria-label","ErrorMessage","message","Snackbar","backgroundColor","anchorOrigin","vertical","horizontal","open","SnackbarContent","APP_ID","process","REACT_APP_APPID","API_URL","formatDate","date","getMaxTemperature","values","reduce","prev","curr","getMinTemperature","getWeather","location","fetch","then","res","json","data","catch","getForecast","cod","dates","list","acc","dt_txt","forEach","filter","d","getPlacePhoto","results","Math","floor","random","HomeComponent","state","error","this","getWeatherData","window","addEventListener","scrollY","setState","prevProps","prevState","placePhoto","placeImage","urls","regular","backgroundImage","backgroundSize","backgroundPosition","bind","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b9435d7.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport moment from \"moment\";\nimport \"./fiveDaysWeather.scss\";\n\nconst FiveDaysWeather = props => {\n  const { forecast, scroll } = props;\n\n  return (\n    <Fragment>\n      {forecast && Object.keys(forecast).length !== 0 && (\n        <Grid\n          container\n          className={\n            scroll ? \"forecast__container active\" : \"forecast__container\"\n          }\n          alignItems=\"stretch\"\n        >\n          {Object.keys(forecast)\n            .sort((a, b) => moment(a).valueOf() - moment(b).valueOf())\n            .map(x => (\n              <Grid item className=\"forecast__day\" xs key={x}>\n                <h5>{moment(x).format(\"ddd, DD\")}</h5>\n                <br />\n                <i\n                  className={`wi wi-owm-${forecast[x].day.weather[0].id} forecast-icon`}\n                ></i>\n                <br />\n                {forecast[x].day.main.temp_max} °C\n                <br />\n                {forecast[x].night.main.temp_min} °C\n                <br />\n                {forecast[x].humidity}%\n              </Grid>\n            ))}\n        </Grid>\n      )}\n    </Fragment>\n  );\n};\n\nexport default FiveDaysWeather;\n","import React, { Fragment } from \"react\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport { animations } from \"react-animation\";\nimport \"./todayWeather.scss\";\nimport \"react-animation/dist/keyframes.css\";\n\nconst TodayWeather = props => {\n  const { weather, scroll } = props;\n  return (\n    <Fragment>\n      {weather && weather.main && (\n        <div className={scroll ? \"weather-city active\" : \"weather-city\"}>\n          <LocationOnIcon\n            className={\"weather-city--icon\"}\n            style={{ animation: animations.bounceIn }}\n          />\n          <h2 className={\"weather-city--name\"}>\n            {weather.name}, {weather.sys.country}\n          </h2>\n          <i className={`wi wi-owm-${weather.weather[0].id} weather-icon`}></i>\n          <h3 className={\"weather-city--temp\"}>\n            {weather.main.temp}\n            <span>°C</span>\n          </h3>\n          <h5 className={\"weather-city--temp-breakdown\"}>\n            <span className=\"min\">Min: {weather.main.temp_min} °C</span>\n            <span className=\"max\">Max: {weather.main.temp_max} °C</span>\n            <span className=\"hum\">Humidity: {weather.main.humidity}%</span>\n          </h5>\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nexport default TodayWeather;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Paper from \"@material-ui/core/Paper\";\nimport \"./citySelector.scss\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"relative\",\n    zIndex: 11\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    height: 28,\n    margin: 4\n  }\n}));\n\nconst CitySelector = props => {\n  const classes = useStyles();\n\n  const [city, setCity] = useState();\n\n  const handleSubmit = event => {\n    props.setCity(city);\n    event.preventDefault();\n  };\n\n  return (\n    <CardContent className={classes.root}>\n      <Paper\n        component=\"form\"\n        className={`search-form ${props.scroll ? \" active\" : \"\"}`}\n        onSubmit={handleSubmit}\n      >\n        <InputBase\n          placeholder=\"Search for a city\"\n          onChange={e => setCity(e.target.value)}\n          className={classes.input}\n        />\n        <IconButton\n          type=\"submit\"\n          aria-label=\"search\"\n          className={classes.iconButton}\n        >\n          <SearchIcon />\n        </IconButton>\n      </Paper>\n    </CardContent>\n  );\n};\n\nexport default CitySelector;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\n\nconst ErrorMessage = props => {\n  const { message } = props;\n  return (\n    <Snackbar\n      style={{ backgroundColor: \"amber\" }}\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n      open={!!message}\n    >\n      <SnackbarContent\n        message={\n          <span>\n            <ErrorIcon /> {message}\n          </span>\n        }\n      ></SnackbarContent>\n    </Snackbar>\n  );\n};\n\nErrorMessage.propTypes = {\n  message: PropTypes.string\n};\nexport default ErrorMessage;\n","import moment from \"moment\";\n\nconst APP_ID = process.env.REACT_APP_APPID\n  ? process.env.REACT_APP_APPID\n  : \"6cd3cf4d438d90102cedea6cb1ad1b22\";\nconst UNSPLASH_KEY =\n  \"e48cda23f3c9d5b2e91f209fafc5ad18e345aa7aa2b1e81c2122dc4f9edf6f28\";\nconst API_URL = \"https://api.openweathermap.org/data/2.5/\";\nconst UNSPLASH_URL = \"https://api.unsplash.com/search/\";\nconst STATUS_OK = \"200\";\n\nconst formatDate = date => moment(date).format(\"YYYY-MM-DD\");\n\nconst getDatesFromList = list =>\n  list.reduce((acc, curr) => {\n    if (formatDate(curr.dt_txt) !== formatDate(acc.dt_txt)) {\n      acc[formatDate(curr.dt_txt)] = {\n        day: 0,\n        night: 0,\n        humidity: 0\n      };\n    }\n    return acc;\n  }, {});\n\nconst getMaxTemperature = values =>\n  values.reduce((prev, curr) =>\n    prev.main.temp_max > curr.main.temp_max\n      ? { weather: prev.weather, main: prev.main }\n      : { weather: curr.weather, main: curr.main }\n  );\n\nconst getMinTemperature = values =>\n  values.reduce((prev, curr) =>\n    prev.main.temp_min < curr.main.temp_min\n      ? { weather: prev.weather, main: prev.main }\n      : { weather: curr.weather, main: curr.main }\n  );\n\nconst getRandomPhoto = list => {\n  return list[Math.floor(Math.random() * Math.floor(list.length))];\n};\n\nexport const getWeather = async location =>\n  await fetch(`${API_URL}weather?q=${location}&APPID=${APP_ID}&units=metric`)\n    .then(res => res.json())\n    .then(data => data)\n    .catch(e => e);\n\nexport const getForecast = async location =>\n  await fetch(`${API_URL}forecast?q=${location}&APPID=${APP_ID}&units=metric`)\n    .then(res => res.json())\n    .then(data => {\n      if (data.cod !== STATUS_OK) return data;\n\n      const dates = getDatesFromList(data.list);\n\n      Object.keys(dates).forEach(x => {\n        const values = data.list.filter(d => formatDate(d.dt_txt) === x);\n        dates[x].day = getMaxTemperature(values);\n        dates[x].night = getMinTemperature(values);\n        dates[x].humidity = values[0].main.humidity;\n      });\n\n      return dates;\n    })\n    .catch(e => e);\n\nexport const getPlacePhoto = async input => {\n  return fetch(\n    `${UNSPLASH_URL}photos/?page=1&orientation=landscape&query=${input}&client_id=${UNSPLASH_KEY}`\n  )\n    .then(res => res.json())\n    .then(res => {\n      if (res.results.length) {\n        return getRandomPhoto(res.results);\n      }\n    })\n    .catch(e => e);\n};\n","import React, { Fragment } from \"react\";\nimport FiveDaysWeather from \"../fiveDaysWeather/fiveDaysWeather\";\nimport TodayWeather from \"../todayWeather/todayWeather\";\nimport CitySelector from \"../citySelector/citySelector\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ErrorMessage from \"../errorMessage/errorMessage\";\nimport { getWeather, getForecast, getPlacePhoto } from \"../../services/weather\";\nimport { ERROR_404 } from \"../../common/const\";\nimport \"./home.scss\";\n\nclass HomeComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: \"London\",\n      weather: {},\n      forecast: {},\n      error: {},\n      scroll: false\n    };\n  }\n\n  componentDidMount() {\n    this.getWeatherData();\n\n    window.addEventListener(\"scroll\", () => {\n      let scroll = true;\n      if (window.scrollY === 0) {\n        scroll = false;\n      }\n      this.setState({ scroll });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.city !== prevState.city) {\n      this.getWeatherData();\n    }\n  }\n\n  async getWeatherData() {\n    const weather = await getWeather(this.state.city);\n    const forecast = await getForecast(this.state.city);\n    const placePhoto = await getPlacePhoto(this.state.city);\n    weather.placeImage = placePhoto ? placePhoto.urls.regular : \"\";\n\n    if ((weather.cod || forecast.cod) === ERROR_404) {\n      this.setState({ error: weather || forecast, weather: {}, forecast: {} });\n      return;\n    }\n\n    this.setState({\n      weather,\n      forecast,\n      error: {}\n    });\n  }\n\n  setCity(city) {\n    if (city) {\n      this.setState({ city });\n    }\n  }\n\n  render() {\n    const { scroll, weather, forecast, error } = this.state;\n    return (\n      <Fragment>\n        <Grid container alignItems=\"stretch\">\n          <Grid\n            item\n            xs={12}\n            className=\"main-weather\"\n            style={{\n              backgroundImage: `url(${this.state.weather.placeImage})`,\n              backgroundSize: \"cover\",\n              backgroundPosition: \"center\"\n            }}\n          >\n            <CitySelector setCity={this.setCity.bind(this)} scroll={scroll} />\n            <TodayWeather weather={weather} scroll={scroll} />\n            <section\n              className={`scroll-down ${scroll || !!error.cod ? \"active\" : \"\"}`}\n            >\n              <i>\n                <span></span>\n              </i>\n            </section>\n          </Grid>\n          <Grid item xs={12}>\n            <FiveDaysWeather forecast={forecast} scroll={scroll} />\n          </Grid>\n        </Grid>\n        {error.message && <ErrorMessage message={error.message} />}\n      </Fragment>\n    );\n  }\n}\n\nexport default HomeComponent;\n","export const SET_VALUE = \"SET_VALUE\";\nexport const GET_MIN = \"GET_MIN\";\nexport const GET_MEAN = \"GET_MEAN\";\nexport const GET_MAX = \"GET_MAX\";\nexport const GET_MODE = \"GET_MODE\";\n\nexport const ERROR_404 = \"404\";\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"../node_modules/react-vis/dist/style.css\";\nimport \"react-animation/dist/keyframes.css\";\nimport \"./style/weather-icons.min.css\";\nimport HomeComponent from \"./components/home/home\";\n\nReactDOM.render(<HomeComponent />, document.getElementById(\"root\"));\n"],"sourceRoot":""}